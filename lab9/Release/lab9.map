Archive member included because of file (symbol)

/usr/lib/gcc/avr/4.8.1/../../../avr/lib/avr5/libprintf_flt.a(vfprintf_flt.o)
                              (vfprintf)
/usr/lib/gcc/avr/4.8.1/avr5/libgcc.a(_exit.o)
                              /usr/lib/gcc/avr/4.8.1/../../../avr/lib/avr5/crtm32.o (exit)
/usr/lib/gcc/avr/4.8.1/avr5/libgcc.a(_copy_data.o)
                              ./main.o (__do_copy_data)
/usr/lib/gcc/avr/4.8.1/avr5/libgcc.a(_prologue.o)
                              /usr/lib/gcc/avr/4.8.1/../../../avr/lib/avr5/libprintf_flt.a(vfprintf_flt.o) (__prologue_saves__)
/usr/lib/gcc/avr/4.8.1/avr5/libgcc.a(_epilogue.o)
                              /usr/lib/gcc/avr/4.8.1/../../../avr/lib/avr5/libprintf_flt.a(vfprintf_flt.o) (__epilogue_restores__)
/usr/lib/gcc/avr/4.8.1/../../../avr/lib/avr5/libc.a(ftoa_engine.o)
                              /usr/lib/gcc/avr/4.8.1/../../../avr/lib/avr5/libprintf_flt.a(vfprintf_flt.o) (__ftoa_engine)
/usr/lib/gcc/avr/4.8.1/../../../avr/lib/avr5/libc.a(strnlen_P.o)
                              /usr/lib/gcc/avr/4.8.1/../../../avr/lib/avr5/libprintf_flt.a(vfprintf_flt.o) (strnlen_P)
/usr/lib/gcc/avr/4.8.1/../../../avr/lib/avr5/libc.a(strnlen.o)
                              /usr/lib/gcc/avr/4.8.1/../../../avr/lib/avr5/libprintf_flt.a(vfprintf_flt.o) (strnlen)
/usr/lib/gcc/avr/4.8.1/../../../avr/lib/avr5/libc.a(fprintf.o)
                              ./main.o (fprintf)
/usr/lib/gcc/avr/4.8.1/../../../avr/lib/avr5/libc.a(fputc.o)
                              /usr/lib/gcc/avr/4.8.1/../../../avr/lib/avr5/libprintf_flt.a(vfprintf_flt.o) (fputc)
/usr/lib/gcc/avr/4.8.1/../../../avr/lib/avr5/libc.a(ultoa_invert.o)
                              /usr/lib/gcc/avr/4.8.1/../../../avr/lib/avr5/libprintf_flt.a(vfprintf_flt.o) (__ultoa_invert)

Memory Configuration

Name             Origin             Length             Attributes
text             0x0000000000000000 0x0000000000020000 xr
data             0x0000000000800060 0x000000000000ffa0 rw !x
eeprom           0x0000000000810000 0x0000000000010000 rw !x
fuse             0x0000000000820000 0x0000000000000400 rw !x
lock             0x0000000000830000 0x0000000000000400 rw !x
signature        0x0000000000840000 0x0000000000000400 rw !x
user_signatures  0x0000000000850000 0x0000000000000400 rw !x
*default*        0x0000000000000000 0xffffffffffffffff

Linker script and memory map

LOAD /usr/lib/gcc/avr/4.8.1/../../../avr/lib/avr5/crtm32.o
LOAD ./lcd.o
LOAD ./main.o
LOAD ./ow.o
LOAD /usr/lib/gcc/avr/4.8.1/../../../avr/lib/avr5/libprintf_flt.a
START GROUP
LOAD /usr/lib/gcc/avr/4.8.1/avr5/libgcc.a
LOAD /usr/lib/gcc/avr/4.8.1/../../../avr/lib/avr5/libm.a
LOAD /usr/lib/gcc/avr/4.8.1/../../../avr/lib/avr5/libc.a
END GROUP

.hash
 *(.hash)

.dynsym
 *(.dynsym)

.dynstr
 *(.dynstr)

.gnu.version
 *(.gnu.version)

.gnu.version_d
 *(.gnu.version_d)

.gnu.version_r
 *(.gnu.version_r)

.rel.init
 *(.rel.init)

.rela.init
 *(.rela.init)

.rel.text
 *(.rel.text)
 *(.rel.text.*)
 *(.rel.gnu.linkonce.t*)

.rela.text
 *(.rela.text)
 *(.rela.text.*)
 *(.rela.gnu.linkonce.t*)

.rel.fini
 *(.rel.fini)

.rela.fini
 *(.rela.fini)

.rel.rodata
 *(.rel.rodata)
 *(.rel.rodata.*)
 *(.rel.gnu.linkonce.r*)

.rela.rodata
 *(.rela.rodata)
 *(.rela.rodata.*)
 *(.rela.gnu.linkonce.r*)

.rel.data
 *(.rel.data)
 *(.rel.data.*)
 *(.rel.gnu.linkonce.d*)

.rela.data
 *(.rela.data)
 *(.rela.data.*)
 *(.rela.gnu.linkonce.d*)

.rel.ctors
 *(.rel.ctors)

.rela.ctors
 *(.rela.ctors)

.rel.dtors
 *(.rel.dtors)

.rela.dtors
 *(.rela.dtors)

.rel.got
 *(.rel.got)

.rela.got
 *(.rela.got)

.rel.bss
 *(.rel.bss)

.rela.bss
 *(.rela.bss)

.rel.plt
 *(.rel.plt)

.rela.plt
 *(.rela.plt)

.text           0x0000000000000000      0xf26
 *(.vectors)
 .vectors       0x0000000000000000       0x54 /usr/lib/gcc/avr/4.8.1/../../../avr/lib/avr5/crtm32.o
                0x0000000000000000                __vectors
                0x0000000000000000                __vector_default
 *(.vectors)
 *(.progmem.gcc*)
                0x0000000000000054                . = ALIGN (0x2)
                0x0000000000000054                __trampolines_start = .
 *(.trampolines)
 .trampolines   0x0000000000000054        0x0 linker stubs
 *(.trampolines*)
                0x0000000000000054                __trampolines_end = .
 *(.progmem*)
 .progmem.data  0x0000000000000054        0x8 /usr/lib/gcc/avr/4.8.1/../../../avr/lib/avr5/libprintf_flt.a(vfprintf_flt.o)
 .progmem.data  0x000000000000005c       0xfa /usr/lib/gcc/avr/4.8.1/../../../avr/lib/avr5/libc.a(ftoa_engine.o)
                0x0000000000000156                . = ALIGN (0x2)
 *(.jumptables)
 *(.jumptables*)
 *(.lowtext)
 *(.lowtext*)
                0x0000000000000156                __ctors_start = .
 *(.ctors)
                0x0000000000000156                __ctors_end = .
                0x0000000000000156                __dtors_start = .
 *(.dtors)
                0x0000000000000156                __dtors_end = .
 SORT(*)(.ctors)
 SORT(*)(.dtors)
 *(.init0)
 .init0         0x0000000000000156        0x0 /usr/lib/gcc/avr/4.8.1/../../../avr/lib/avr5/crtm32.o
                0x0000000000000156                __init
 *(.init0)
 *(.init1)
 *(.init1)
 *(.init2)
 .init2         0x0000000000000156        0xc /usr/lib/gcc/avr/4.8.1/../../../avr/lib/avr5/crtm32.o
 *(.init2)
 *(.init3)
 *(.init3)
 *(.init4)
 .init4         0x0000000000000162       0x16 /usr/lib/gcc/avr/4.8.1/avr5/libgcc.a(_copy_data.o)
                0x0000000000000162                __do_copy_data
 *(.init4)
 *(.init5)
 *(.init5)
 *(.init6)
 *(.init6)
 *(.init7)
 *(.init7)
 *(.init8)
 *(.init8)
 *(.init9)
 .init9         0x0000000000000178        0x8 /usr/lib/gcc/avr/4.8.1/../../../avr/lib/avr5/crtm32.o
 *(.init9)
 *(.text)
 .text          0x0000000000000180        0x4 /usr/lib/gcc/avr/4.8.1/../../../avr/lib/avr5/crtm32.o
                0x0000000000000180                __vector_1
                0x0000000000000180                __vector_12
                0x0000000000000180                __bad_interrupt
                0x0000000000000180                __vector_6
                0x0000000000000180                __vector_3
                0x0000000000000180                __vector_11
                0x0000000000000180                __vector_13
                0x0000000000000180                __vector_17
                0x0000000000000180                __vector_19
                0x0000000000000180                __vector_7
                0x0000000000000180                __vector_5
                0x0000000000000180                __vector_4
                0x0000000000000180                __vector_9
                0x0000000000000180                __vector_2
                0x0000000000000180                __vector_15
                0x0000000000000180                __vector_8
                0x0000000000000180                __vector_14
                0x0000000000000180                __vector_10
                0x0000000000000180                __vector_16
                0x0000000000000180                __vector_18
                0x0000000000000180                __vector_20
 .text          0x0000000000000184        0x0 ./lcd.o
 .text          0x0000000000000184        0x0 ./main.o
 .text          0x0000000000000184        0x0 ./ow.o
 .text          0x0000000000000184        0x0 /usr/lib/gcc/avr/4.8.1/../../../avr/lib/avr5/libprintf_flt.a(vfprintf_flt.o)
 .text          0x0000000000000184        0x0 /usr/lib/gcc/avr/4.8.1/avr5/libgcc.a(_exit.o)
 .text          0x0000000000000184        0x0 /usr/lib/gcc/avr/4.8.1/avr5/libgcc.a(_copy_data.o)
 .text          0x0000000000000184        0x0 /usr/lib/gcc/avr/4.8.1/avr5/libgcc.a(_prologue.o)
 .text          0x0000000000000184        0x0 /usr/lib/gcc/avr/4.8.1/avr5/libgcc.a(_epilogue.o)
 .text          0x0000000000000184        0x0 /usr/lib/gcc/avr/4.8.1/../../../avr/lib/avr5/libc.a(ftoa_engine.o)
 .text          0x0000000000000184        0x0 /usr/lib/gcc/avr/4.8.1/../../../avr/lib/avr5/libc.a(strnlen_P.o)
 .text          0x0000000000000184        0x0 /usr/lib/gcc/avr/4.8.1/../../../avr/lib/avr5/libc.a(strnlen.o)
 .text          0x0000000000000184        0x0 /usr/lib/gcc/avr/4.8.1/../../../avr/lib/avr5/libc.a(fprintf.o)
 .text          0x0000000000000184        0x0 /usr/lib/gcc/avr/4.8.1/../../../avr/lib/avr5/libc.a(fputc.o)
 .text          0x0000000000000184        0x0 /usr/lib/gcc/avr/4.8.1/../../../avr/lib/avr5/libc.a(ultoa_invert.o)
                0x0000000000000184                . = ALIGN (0x2)
 *(.text.*)
 .text.lcd_write_instr
                0x0000000000000184       0x58 ./lcd.o
                0x0000000000000184                lcd_write_instr
 .text.lcd_init
                0x00000000000001dc       0x64 ./lcd.o
                0x00000000000001dc                lcd_init
 .text.lcd_clear
                0x0000000000000240        0x6 ./lcd.o
                0x0000000000000240                lcd_clear
 .text.lcd_write_data
                0x0000000000000246       0x56 ./lcd.o
                0x0000000000000246                lcd_write_data
 .text.lcd_set_xy
                0x000000000000029c        0xe ./lcd.o
                0x000000000000029c                lcd_set_xy
 .text.lcd_write_text_xy
                0x00000000000002aa       0x4e ./lcd.o
                0x00000000000002aa                lcd_write_text_xy
 .text.lcd_putc
                0x00000000000002f8        0xa ./lcd.o
                0x00000000000002f8                lcd_putc
 .text.thermo_init
                0x0000000000000302        0x2 ./main.o
                0x0000000000000302                thermo_init
 .text.startup.main
                0x0000000000000304       0xd4 ./main.o
                0x0000000000000304                main
 .text.OW_reset
                0x00000000000003d8       0x26 ./ow.o
                0x00000000000003d8                OW_reset
 .text.OW_send  0x00000000000003fe       0x2a ./ow.o
                0x00000000000003fe                OW_send
 .text.OW_recv  0x0000000000000428       0x20 ./ow.o
                0x0000000000000428                OW_recv
 .text.OW_send_byte
                0x0000000000000448       0x24 ./ow.o
                0x0000000000000448                OW_send_byte
 .text.OW_read_byte
                0x000000000000046c       0x32 ./ow.o
                0x000000000000046c                OW_read_byte
 .text.avr-libc
                0x000000000000049e      0x6f6 /usr/lib/gcc/avr/4.8.1/../../../avr/lib/avr5/libprintf_flt.a(vfprintf_flt.o)
                0x000000000000049e                vfprintf
 .text.libgcc.mul
                0x0000000000000b94        0x0 /usr/lib/gcc/avr/4.8.1/avr5/libgcc.a(_exit.o)
 .text.libgcc.div
                0x0000000000000b94        0x0 /usr/lib/gcc/avr/4.8.1/avr5/libgcc.a(_exit.o)
 .text.libgcc   0x0000000000000b94        0x0 /usr/lib/gcc/avr/4.8.1/avr5/libgcc.a(_exit.o)
 .text.libgcc.prologue
                0x0000000000000b94        0x0 /usr/lib/gcc/avr/4.8.1/avr5/libgcc.a(_exit.o)
 .text.libgcc.builtins
                0x0000000000000b94        0x0 /usr/lib/gcc/avr/4.8.1/avr5/libgcc.a(_exit.o)
 .text.libgcc.fmul
                0x0000000000000b94        0x0 /usr/lib/gcc/avr/4.8.1/avr5/libgcc.a(_exit.o)
 .text.libgcc.fixed
                0x0000000000000b94        0x0 /usr/lib/gcc/avr/4.8.1/avr5/libgcc.a(_exit.o)
 .text.libgcc.mul
                0x0000000000000b94        0x0 /usr/lib/gcc/avr/4.8.1/avr5/libgcc.a(_copy_data.o)
 .text.libgcc.div
                0x0000000000000b94        0x0 /usr/lib/gcc/avr/4.8.1/avr5/libgcc.a(_copy_data.o)
 .text.libgcc   0x0000000000000b94        0x0 /usr/lib/gcc/avr/4.8.1/avr5/libgcc.a(_copy_data.o)
 .text.libgcc.prologue
                0x0000000000000b94        0x0 /usr/lib/gcc/avr/4.8.1/avr5/libgcc.a(_copy_data.o)
 .text.libgcc.builtins
                0x0000000000000b94        0x0 /usr/lib/gcc/avr/4.8.1/avr5/libgcc.a(_copy_data.o)
 .text.libgcc.fmul
                0x0000000000000b94        0x0 /usr/lib/gcc/avr/4.8.1/avr5/libgcc.a(_copy_data.o)
 .text.libgcc.fixed
                0x0000000000000b94        0x0 /usr/lib/gcc/avr/4.8.1/avr5/libgcc.a(_copy_data.o)
 .text.libgcc.mul
                0x0000000000000b94        0x0 /usr/lib/gcc/avr/4.8.1/avr5/libgcc.a(_prologue.o)
 .text.libgcc.div
                0x0000000000000b94        0x0 /usr/lib/gcc/avr/4.8.1/avr5/libgcc.a(_prologue.o)
 .text.libgcc   0x0000000000000b94        0x0 /usr/lib/gcc/avr/4.8.1/avr5/libgcc.a(_prologue.o)
 .text.libgcc.prologue
                0x0000000000000b94       0x38 /usr/lib/gcc/avr/4.8.1/avr5/libgcc.a(_prologue.o)
                0x0000000000000b94                __prologue_saves__
 .text.libgcc.builtins
                0x0000000000000bcc        0x0 /usr/lib/gcc/avr/4.8.1/avr5/libgcc.a(_prologue.o)
 .text.libgcc.fmul
                0x0000000000000bcc        0x0 /usr/lib/gcc/avr/4.8.1/avr5/libgcc.a(_prologue.o)
 .text.libgcc.fixed
                0x0000000000000bcc        0x0 /usr/lib/gcc/avr/4.8.1/avr5/libgcc.a(_prologue.o)
 .text.libgcc.mul
                0x0000000000000bcc        0x0 /usr/lib/gcc/avr/4.8.1/avr5/libgcc.a(_epilogue.o)
 .text.libgcc.div
                0x0000000000000bcc        0x0 /usr/lib/gcc/avr/4.8.1/avr5/libgcc.a(_epilogue.o)
 .text.libgcc   0x0000000000000bcc        0x0 /usr/lib/gcc/avr/4.8.1/avr5/libgcc.a(_epilogue.o)
 .text.libgcc.prologue
                0x0000000000000bcc       0x36 /usr/lib/gcc/avr/4.8.1/avr5/libgcc.a(_epilogue.o)
                0x0000000000000bcc                __epilogue_restores__
 .text.libgcc.builtins
                0x0000000000000c02        0x0 /usr/lib/gcc/avr/4.8.1/avr5/libgcc.a(_epilogue.o)
 .text.libgcc.fmul
                0x0000000000000c02        0x0 /usr/lib/gcc/avr/4.8.1/avr5/libgcc.a(_epilogue.o)
 .text.libgcc.fixed
                0x0000000000000c02        0x0 /usr/lib/gcc/avr/4.8.1/avr5/libgcc.a(_epilogue.o)
 .text.avr-libc
                0x0000000000000c02      0x1b0 /usr/lib/gcc/avr/4.8.1/../../../avr/lib/avr5/libc.a(ftoa_engine.o)
                0x0000000000000c02                __ftoa_engine
 .text.avr-libc
                0x0000000000000db2       0x16 /usr/lib/gcc/avr/4.8.1/../../../avr/lib/avr5/libc.a(strnlen_P.o)
                0x0000000000000db2                strnlen_P
 .text.avr-libc
                0x0000000000000dc8       0x16 /usr/lib/gcc/avr/4.8.1/../../../avr/lib/avr5/libc.a(strnlen.o)
                0x0000000000000dc8                strnlen
 .text.avr-libc
                0x0000000000000dde       0x24 /usr/lib/gcc/avr/4.8.1/../../../avr/lib/avr5/libc.a(fprintf.o)
                0x0000000000000dde                fprintf
 .text.avr-libc
                0x0000000000000e02       0x64 /usr/lib/gcc/avr/4.8.1/../../../avr/lib/avr5/libc.a(fputc.o)
                0x0000000000000e02                fputc
 .text.avr-libc
                0x0000000000000e66       0xbc /usr/lib/gcc/avr/4.8.1/../../../avr/lib/avr5/libc.a(ultoa_invert.o)
                0x0000000000000e66                __ultoa_invert
                0x0000000000000f22                . = ALIGN (0x2)
 *(.fini9)
 .fini9         0x0000000000000f22        0x0 /usr/lib/gcc/avr/4.8.1/avr5/libgcc.a(_exit.o)
                0x0000000000000f22                exit
                0x0000000000000f22                _exit
 *(.fini9)
 *(.fini8)
 *(.fini8)
 *(.fini7)
 *(.fini7)
 *(.fini6)
 *(.fini6)
 *(.fini5)
 *(.fini5)
 *(.fini4)
 *(.fini4)
 *(.fini3)
 *(.fini3)
 *(.fini2)
 *(.fini2)
 *(.fini1)
 *(.fini1)
 *(.fini0)
 .fini0         0x0000000000000f22        0x4 /usr/lib/gcc/avr/4.8.1/avr5/libgcc.a(_exit.o)
 *(.fini0)
                0x0000000000000f26                _etext = .

.data           0x0000000000800060       0x26 load address 0x0000000000000f26
                0x0000000000800060                PROVIDE (__data_start, .)
 *(.data)
 .data          0x0000000000800060        0x0 /usr/lib/gcc/avr/4.8.1/../../../avr/lib/avr5/crtm32.o
 .data          0x0000000000800060        0x0 ./lcd.o
 .data          0x0000000000800060        0x0 ./main.o
 .data          0x0000000000800060        0x0 ./ow.o
 .data          0x0000000000800060        0x0 /usr/lib/gcc/avr/4.8.1/../../../avr/lib/avr5/libprintf_flt.a(vfprintf_flt.o)
 .data          0x0000000000800060        0x0 /usr/lib/gcc/avr/4.8.1/avr5/libgcc.a(_exit.o)
 .data          0x0000000000800060        0x0 /usr/lib/gcc/avr/4.8.1/avr5/libgcc.a(_copy_data.o)
 .data          0x0000000000800060        0x0 /usr/lib/gcc/avr/4.8.1/avr5/libgcc.a(_prologue.o)
 .data          0x0000000000800060        0x0 /usr/lib/gcc/avr/4.8.1/avr5/libgcc.a(_epilogue.o)
 .data          0x0000000000800060        0x0 /usr/lib/gcc/avr/4.8.1/../../../avr/lib/avr5/libc.a(ftoa_engine.o)
 .data          0x0000000000800060        0x0 /usr/lib/gcc/avr/4.8.1/../../../avr/lib/avr5/libc.a(strnlen_P.o)
 .data          0x0000000000800060        0x0 /usr/lib/gcc/avr/4.8.1/../../../avr/lib/avr5/libc.a(strnlen.o)
 .data          0x0000000000800060        0x0 /usr/lib/gcc/avr/4.8.1/../../../avr/lib/avr5/libc.a(fprintf.o)
 .data          0x0000000000800060        0x0 /usr/lib/gcc/avr/4.8.1/../../../avr/lib/avr5/libc.a(fputc.o)
 .data          0x0000000000800060        0x0 /usr/lib/gcc/avr/4.8.1/../../../avr/lib/avr5/libc.a(ultoa_invert.o)
 *(.data*)
 .data.lcd_stream
                0x0000000000800060        0xe ./main.o
                0x0000000000800060                lcd_stream
 *(.rodata)
 *(.rodata*)
 .rodata.str1.1
                0x000000000080006e       0x18 ./main.o
 *(.gnu.linkonce.d*)
                0x0000000000800086                . = ALIGN (0x2)
                0x0000000000800086                _edata = .
                0x0000000000800086                PROVIDE (__data_end, .)

.bss            0x0000000000800086        0x0
                0x0000000000800086                PROVIDE (__bss_start, .)
 *(.bss)
 .bss           0x0000000000800086        0x0 /usr/lib/gcc/avr/4.8.1/../../../avr/lib/avr5/crtm32.o
 .bss           0x0000000000800086        0x0 ./lcd.o
 .bss           0x0000000000800086        0x0 ./main.o
 .bss           0x0000000000800086        0x0 ./ow.o
 .bss           0x0000000000800086        0x0 /usr/lib/gcc/avr/4.8.1/../../../avr/lib/avr5/libprintf_flt.a(vfprintf_flt.o)
 .bss           0x0000000000800086        0x0 /usr/lib/gcc/avr/4.8.1/avr5/libgcc.a(_exit.o)
 .bss           0x0000000000800086        0x0 /usr/lib/gcc/avr/4.8.1/avr5/libgcc.a(_copy_data.o)
 .bss           0x0000000000800086        0x0 /usr/lib/gcc/avr/4.8.1/avr5/libgcc.a(_prologue.o)
 .bss           0x0000000000800086        0x0 /usr/lib/gcc/avr/4.8.1/avr5/libgcc.a(_epilogue.o)
 .bss           0x0000000000800086        0x0 /usr/lib/gcc/avr/4.8.1/../../../avr/lib/avr5/libc.a(ftoa_engine.o)
 .bss           0x0000000000800086        0x0 /usr/lib/gcc/avr/4.8.1/../../../avr/lib/avr5/libc.a(strnlen_P.o)
 .bss           0x0000000000800086        0x0 /usr/lib/gcc/avr/4.8.1/../../../avr/lib/avr5/libc.a(strnlen.o)
 .bss           0x0000000000800086        0x0 /usr/lib/gcc/avr/4.8.1/../../../avr/lib/avr5/libc.a(fprintf.o)
 .bss           0x0000000000800086        0x0 /usr/lib/gcc/avr/4.8.1/../../../avr/lib/avr5/libc.a(fputc.o)
 .bss           0x0000000000800086        0x0 /usr/lib/gcc/avr/4.8.1/../../../avr/lib/avr5/libc.a(ultoa_invert.o)
 *(.bss*)
 *(COMMON)
                0x0000000000800086                PROVIDE (__bss_end, .)
                0x0000000000000f26                __data_load_start = LOADADDR (.data)
                0x0000000000000f4c                __data_load_end = (__data_load_start + SIZEOF (.data))

.noinit         0x0000000000800086        0x0
                0x0000000000800086                PROVIDE (__noinit_start, .)
 *(.noinit*)
                0x0000000000800086                PROVIDE (__noinit_end, .)
                0x0000000000800086                _end = .
                0x0000000000800086                PROVIDE (__heap_start, .)

.eeprom         0x0000000000810000        0x0
 *(.eeprom*)
                0x0000000000810000                __eeprom_end = .

.fuse
 *(.fuse)
 *(.lfuse)
 *(.hfuse)
 *(.efuse)

.lock
 *(.lock*)

.signature
 *(.signature*)

.user_signatures
 *(.user_signatures*)

.stab
 *(.stab)

.stabstr
 *(.stabstr)

.stab.excl
 *(.stab.excl)

.stab.exclstr
 *(.stab.exclstr)

.stab.index
 *(.stab.index)

.stab.indexstr
 *(.stab.indexstr)

.comment        0x0000000000000000       0x11
 *(.comment)
 .comment       0x0000000000000000       0x11 ./lcd.o
                                         0x12 (size before relaxing)
 .comment       0x0000000000000000       0x12 ./main.o
 .comment       0x0000000000000000       0x12 ./ow.o
 .comment       0x0000000000000000       0x12 /usr/lib/gcc/avr/4.8.1/../../../avr/lib/avr5/libprintf_flt.a(vfprintf_flt.o)
 .comment       0x0000000000000000       0x12 /usr/lib/gcc/avr/4.8.1/../../../avr/lib/avr5/libc.a(fprintf.o)
 .comment       0x0000000000000000       0x12 /usr/lib/gcc/avr/4.8.1/../../../avr/lib/avr5/libc.a(fputc.o)

.note.gnu.build-id
 *(.note.gnu.build-id)

.debug
 *(.debug)

.line
 *(.line)

.debug_srcinfo
 *(.debug_srcinfo)

.debug_sfnames
 *(.debug_sfnames)

.debug_aranges
 *(.debug_aranges)

.debug_pubnames
 *(.debug_pubnames)

.debug_info
 *(.debug_info .gnu.linkonce.wi.*)

.debug_abbrev
 *(.debug_abbrev)

.debug_line
 *(.debug_line .debug_line.* .debug_line_end)

.debug_frame
 *(.debug_frame)

.debug_str
 *(.debug_str)

.debug_loc
 *(.debug_loc)

.debug_macinfo
 *(.debug_macinfo)

.debug_weaknames
 *(.debug_weaknames)

.debug_funcnames
 *(.debug_funcnames)

.debug_typenames
 *(.debug_typenames)

.debug_varnames
 *(.debug_varnames)

.debug_pubtypes
 *(.debug_pubtypes)

.debug_ranges
 *(.debug_ranges)

.debug_macro
 *(.debug_macro)
OUTPUT(lab9.elf elf32-avr)
LOAD linker stubs
